{
	"info": {
		"_postman_id": "c5fd9c88-b9dc-40c0-b07c-55c1496681ae",
		"name": "Vamo Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24301889"
	},
	"item": [
		{
			"name": "Get auth token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"token\", data.token);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"admin\",\r\n    \"password\":\"admin\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create clients",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"\r",
							"if (pm.globals.get(\"clientIds\") == undefined || pm.globals.get(\"clientIds\") == null ){\r",
							"    \r",
							"    let ids =[\"\\\"\"+data.id+\"\\\"\"]\r",
							"    pm.globals.set(\"clientIds\", ids);\r",
							"}\r",
							"else{\r",
							"    let a=pm.globals.get(\"clientIds\")\r",
							"    a.push(\"\\\"\"+data.id+\"\\\"\")\r",
							"    pm.globals.set(\"clientIds\", a);\r",
							"}\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"name\":\"{{name}}\",\r\n    \"password\":\"{{password}}\" ,\r\n    \"picture\":\"{{picture}}\",\r\n    \"description\":\"{{description}}\",\r\n    \"tags\":[{{tags}}]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clients",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create places",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"if (pm.globals.get(\"placesIds\") == undefined || pm.globals.get(\"placesIds\") == null ){\r",
							"    let ids =[\"\\\"\"+data.id+\"\\\"\"]\r",
							"    pm.globals.set(\"placesIds\", ids);\r",
							"}\r",
							"else{\r",
							"    let a=pm.globals.get(\"placesIds\")\r",
							"    a.push(\"\\\"\"+data.id+\"\\\"\")\r",
							"    pm.globals.set(\"placesIds\", a);\r",
							"}\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"{{name}}\",\r\n    \"country\":\"{{country}}\",\r\n    \"state\":\"{{state}}\",\r\n    \"city\":\"{{city}}\",\r\n    \"neighborhood\":\"{{neighborhood}}\",\r\n    \"address\":\"{{address}}\",\r\n    \"latitude\":{{latitude}},\r\n    \"longitude\":{{longitude}},\r\n    \"tags\":[{{tags}}],\r\n    \"instagram\":\"{{instagram}}\",\r\n    \"radius\":{{radius}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/places/admin",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"places",
						"admin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Vamo!",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let client = pm.globals.get(\"clientIds\");\r",
							"let places = pm.globals.get(\"placesIds\");\r",
							"\r",
							"function createData(DATA){\r",
							"    let json_response_delete_client= []\r",
							"    for (let x in DATA) {\r",
							"        let ids= {\"id\":DATA[x].replace(\"\\\"\",\"\").replace(\"\\\"\",\"\")}\r",
							"        json_response_delete_client.push(ids)\r",
							"    };\r",
							"    return json_response_delete_client;\r",
							"};\r",
							"let data_client = createData(client)\r",
							"let data_places = createData(places)\r",
							"function myFunction(data,name) {\r",
							"    let opts = {\r",
							"    requestName: name,\r",
							"    fileExtension: 'json',\r",
							"    mode: 'writeFile', // Change this to any function of the fs library of node to use it.\r",
							"    uniqueIdentifier: false,\r",
							"    responseData: JSON.stringify(data)\r",
							"    };\r",
							"    pm.sendRequest({\r",
							"        url: 'http://localhost:8000/write',\r",
							"        method: 'POST',\r",
							"        header: 'Content-Type:application/json',\r",
							"        body: {\r",
							"            mode: 'raw',\r",
							"            raw: JSON.stringify(opts)\r",
							"        }\r",
							"    }, function (err, res) {\r",
							"        console.log(res);\r",
							"    });\r",
							"}\r",
							"myFunction(data_client,\"delete_client\")\r",
							"myFunction(data_places,\"delete_places\")\r",
							"pm.globals.unset(\"clientIds\");\r",
							"pm.globals.unset(\"placesIds\");\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(pm.globals.get(\"clientIds\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"clients\":[{{clientIds}}],\r\n    \"longitude\":-74.19847239138225,\r\n    \"latitude\":4.589304207013122,\r\n    \"radius\":10\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/vamo",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"vamo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete clients",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/clients/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"clients",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete places",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/places/{{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"places",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}